{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4FCC5F3BA49FD5BF185a04A82349A699FA95FA9d",
      "txHash": "0xeaa8ea4c11e6e2f2da5019a315aa10c1e020ad5281946e89641080deac91af67",
      "kind": "uups"
    },
    {
      "address": "0x5734a0A6ffec87002561590B094cac2838205db2",
      "txHash": "0x03e38872aafefa45fb31f9256e0777ae5c9b4f452420564d10b55b67a9e88fc8",
      "kind": "uups"
    },
    {
      "address": "0xF61da923cae62E8Cd79eD23382b23da4c143C494",
      "txHash": "0x30b2acf9746c020a440d37b2b0c4ffc73ef64105510b99e9482f4aceb6cdf798",
      "kind": "uups"
    },
    {
      "address": "0xfFEa6AE6608De700124Efb952F78EFd51E5a3Ee3",
      "txHash": "0x708a28908d100c77f1c52c78ee79036929f918aee3b61bdbce509c9370881129",
      "kind": "uups"
    },
    {
      "address": "0xF1C8f311D60f348f3400975E0f2446FD856e44f8",
      "txHash": "0xa60704497f8fafce3e6baa988807ee9dfe27d4352b7b0e9dd28c64381a62aef4",
      "kind": "uups"
    }
  ],
  "impls": {
    "239b8b52c5f94c98863eed037379fee5b388f74c0d09a6ca3098ea89f8ffd053": {
      "address": "0x02c092eeB03E9d7C9fC5222CC9a79B91e58ec692",
      "txHash": "0x28cc5e660dce56e14f799a4ca9c41179e29e2dc254f997d47da85b27fc1af4f0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "maturityTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32",
            "contract": "CapVaultBase",
            "src": "contracts/core/CapVaultBase.sol:13"
          },
          {
            "label": "underlying",
            "offset": 4,
            "slot": "0",
            "type": "t_address",
            "contract": "CapVaultBase",
            "src": "contracts/core/CapVaultBase.sol:14"
          },
          {
            "label": "maxMintCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CapVaultBase",
            "src": "contracts/core/CapVaultBase.sol:15"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "CapVaultBase",
            "src": "contracts/core/CapVaultBase.sol:16"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32",
            "contract": "EIP712MintPayload",
            "src": "contracts/lib/EIP712MintPayload.sol:31"
          },
          {
            "label": "mintRequestVerifier",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "EIP712MintPayload",
            "src": "contracts/lib/EIP712MintPayload.sol:33"
          },
          {
            "label": "mintRequestNullifier",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "EIP712MintPayload",
            "src": "contracts/lib/EIP712MintPayload.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)227_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)321_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "283cd58319d9f602c3747a0a2be2e6875eb77044c5c1da5080310fa3b423f23d": {
      "address": "0x413F3dA23320EDCcDB79aFC31721cc1B8e5af706",
      "txHash": "0x97736f08721dcb8566e4e1269fafd95e9a41573a4fec2a83990af9e777dbd69a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "vaultToRebateRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "SolomonReferral",
            "src": "contracts/SolomonReferral.sol:14"
          },
          {
            "label": "vaultToAsset",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SolomonReferral",
            "src": "contracts/SolomonReferral.sol:15"
          },
          {
            "label": "nullifier",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
            "contract": "SolomonReferral",
            "src": "contracts/SolomonReferral.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
